apply plugin: 'com.android.application'
apply plugin: 'android-apt'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

repositories {
    flatDir {
        dirs 'libs', '../marketing-data/libs', '../marketing-basemodule/libs'
    }
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    mavenCentral()
}

android {
    compileSdkVersion COMPILE_SDK_VERSION
    buildToolsVersion BUILD_TOOLS_VERSION
    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        minSdkVersion MIN_SDK_VERSION
        targetSdkVersion TARGET_SDK_VERSION
        multiDexEnabled true
        applicationId calm.applicationId
        //versionCode calm.versionCode
        //versionName calm.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    signingConfigs {

        release {
            storeFile file('../release.keystore')
            storePassword "ziranyu-waiter"
            keyAlias "ziranyu-staff"
            keyPassword "ziranyu-waiter"
        }

        develop {
            storeFile file('../develop.jks')
            storePassword "develop"
            keyAlias "pigeon88"
            keyPassword "develop"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            manifestPlaceholders = [UMENG_APPKEY_VALUE: ""]
            buildConfigField "int", "MY_BUILD_TYPE", "0"
            buildConfigField "boolean", "ALLOW_COMPRESS", "true"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            testCoverageEnabled false
            signingConfig signingConfigs.release
            manifestPlaceholders = [UMENG_APPKEY_VALUE: ""]
            buildConfigField "int", "MY_BUILD_TYPE", "1"
            buildConfigField "boolean", "ALLOW_COMPRESS", "false"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        CI {
            minifyEnabled false
            signingConfig signingConfigs.release
            manifestPlaceholders = [UMENG_APPKEY_VALUE: ""]
            buildConfigField "int", "MY_BUILD_TYPE", "2"
            buildConfigField "boolean", "ALLOW_COMPRESS", "true"
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    //自动追加版本号和版本名称
    android.applicationVariants.all {
        variant ->
            variant.outputs.each {
                output -> output.outputFile = new File(output.outputFile.parent, "ziranyu_staff_v" + variant.versionName + "_" + new Date().format("yyMMdd") + "_" + buildType.name + ".apk")
            }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }

    lintOptions {
        //checkReleaseBuilds false
        abortOnError false
        ignoreWarnings false
        checkReleaseBuilds false
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    compile opensdk.AAapi
    apt opensdk.AA

    compile fileTree(include: '*.jar', dir: 'libs')
    compile sdk.cardview

    compile opensdk.ptrLoadMore
    compile opensdk.ormlite
    compile opensdk.swipeToLoadLayout
    compile opensdk.swipemenulistview
    compile opensdk.okhttp3
    compile opensdk.eventbus
    compile opensdk.imageLoader

    compile project(':marketing-basemodule')
    compile project(':marketing-common')
    compile project(':yunfu-ui')
    compile project(':marketing-data')
    compile project(':marketing-mobilepay')
    compile project(':marketing-beauty')
    compile project(':yunfu-push')
    compile project(":zxinglib")

    //添加单元测试
    testCompile sdk.junit
    //testCompile sdk.mockito
    androidTestCompile(sdk.testEspressoCore) {
        exclude group: 'com.android.support', module: 'support-annotations'
        transitive true
    }
    androidTestCompile(sdk.testRunner) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile sdk.testRules
    androidTestCompile("com.android.support:support-annotations:$SUPPORT_VERSION") {
        force = true
    }
    compile opensdk.kotlinStdlibJDK
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:1.2.0"

}

apt {
    arguments {
        if (variant.outputs[0] != null) {
            androidManifestFile variant.outputs[0].processResources.manifestFile
            resourcePackageName 'com.zhongmei.yunfu'
            trace true
        }
    }
}

/*guard {
    findBugsConfig {
        // 开启和关闭findbugs检测
        enable = findbugsEnable.toBoolean()

        reportLevel = "low"
    }
}*/
