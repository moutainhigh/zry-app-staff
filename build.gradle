// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: "config.gradle"

buildscript {
    ext.kotlin_version = '1.2.71'
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        jcenter()
        mavenCentral()

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.3'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
        classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.2.1'
        //classpath 'com.zhongmei.bty:guard:0.1.0'
        classpath 'com.jakewharton:butterknife-gradle-plugin:8.8.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.2.30"
        classpath fileTree(dir: 'calm3/plugin', include: ['*.jar'])
        if (rootProject.ext.fastDexEnable.toBoolean()) {
            classpath 'com.github.typ0520:fastdex-gradle:0.3-rc11'
        }
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

allprojects {
    repositories {
        jcenter()
        //mavenCentral()
        maven { url "https://jitpack.io" }
    }

//    gradle.projectsEvaluated {
//        tasks.withType(JavaCompile) {
//            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
//        }
//    }
}

subprojects {
    apply plugin: 'checkstyle'
    task checkstyle(type: Checkstyle) {
        configFile file("${rootProject.projectDir}/config/checkstyle.xml")
        source 'src/main'
        include '**/**.java'
        exclude '**/gen/**'
        classpath = files()
    }
}

subprojects {
    configurations.all {
        // check for updates every build
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }
}

//apply plugin: 'checkstyle'
//
//checkstyle {
//    toolVersion '6.1.1'
//    showViolations true
//}
//
task clean(type: Delete) {
    delete rootProject.buildDir
}
//
//task checkstyle(type: Checkstyle) {
//    source 'src'
//    configFile file("config/checkstyle.xml")
//    include '**/*.java'
//    exclude '**/gen/**'
//    ignoreFailures true
//
//    classpath = files()
//}