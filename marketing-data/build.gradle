apply plugin: 'com.android.library'
apply plugin: 'android-apt'
apply plugin: 'kotlin-android'


android {
    compileSdkVersion COMPILE_SDK_VERSION
    buildToolsVersion BUILD_TOOLS_VERSION
    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        minSdkVersion MIN_SDK_VERSION
        targetSdkVersion TARGET_SDK_VERSION
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            testCoverageEnabled true
            minifyEnabled false
        }
    }

    lintOptions {
        abortOnError false
    }

}

repositories {
    flatDir {
        dirs 'libs'
    }
    mavenCentral()
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile opensdk.kotlinStdlibJDK

    compile project(':yunfu-http')
    compile project(':yunfu-db')
    compile project(':yunfu-ui')

    //添加单元测试
    testCompile sdk.junit
    //testCompile sdk.mockito
    androidTestCompile(sdk.testEspressoCore, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
}

task clearJar(type: Delete) {
    delete 'build/libs/yunfu-security.jar'
}

task makeJar(type: org.gradle.api.tasks.bundling.Jar) {
    //指定生成的jar名
    baseName 'yunfu-security'
    //从哪里打包class文件
    from('build/intermediates/classes/debug/com/zhongmei/yunfu/core/security')
    //打包到jar后的目录结构
    into('com/zhongmei/yunfu/core/security/')
    //去掉不需要打包的目录和文件
    exclude('test/', 'BuildConfig.class', 'R.class')
    //去掉R$开头的文件
    exclude { it.name.startsWith('R$') }
}

makeJar.dependsOn(clearJar, build)
